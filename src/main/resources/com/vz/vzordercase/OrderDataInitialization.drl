package com.vz.vzordercase;

import org.jbpm.casemgmt.api.model.instance.CaseFileInstance;
import com.vz.vzordercase.Order;
import com.vz.vzordercase.Product;
import java.util.Map;
import java.util.Map.Entry;
import org.jbpm.casemgmt.api.CaseService;
import org.jbpm.services.api.ProcessService;
import org.jbpm.services.api.service.ServiceRegistry;

rule "Process selection dataPrep"
	dialect "mvel"
    when
        $caseData : CaseFileInstance()
        $order : Order() from $caseData.getData("ordered") 
    then
     System.out.println("prodcut inserted into memory" + $order.getId());
     end
rule "Process selection dataPrep1"
	dialect "mvel"
    when
        $caseData : CaseFileInstance()
        $order : Order() from $caseData.getData("caseFile_order")
       
    then
     System.out.println("order" + $order.getCustomerName());
     end
     rule "Process selection order"
	dialect "mvel"
    when
        $caseData : CaseFileInstance()
        $order : Order() from $caseData.getData("order")
       
    then
     System.out.println("order" + $order.getCustomerName());
     end
     rule "Process selection dataPrep2"
	dialect "mvel"
    when
        $caseData : CaseFileInstance()

    then
     System.out.println("order 191919" +  $caseData.getData.toString());

     end
    
   rule "preocessretry"
	dialect "mvel"

    when
        $caseData : CaseFileInstance()
        prod : Product() from $caseData.getData("retry") 
    then
    System.out.println("retry process entered" +  prod.getId());
    System.out.println("retry case id" +  $caseData.getCaseId());
     $caseData.remove("retry");
     kcontext.update($caseData);
     System.out.println("retry process" +  prod.getId());
     CaseService caseService = (CaseService) ServiceRegistry.get().service(ServiceRegistry.CASE_SERVICE); 
     java.util.Map parm = new java.util.HashMap(); 
     parm.put("caseId" , $caseData.getCaseId() );
     parm.put("productId" , prod.getId() );
     parm.put("productId-"+prod.getId() , prod);  
     caseService.addDynamicSubprocess($caseData.getCaseId(),prod.getProcess() , parm);
     caseService.triggerAdHocFragment($caseData.getCaseId(),"Retry-Installation item" , parm);

     //ProcessService processService = (ProcessService) ServiceRegistry.get().service(ServiceRegistry.PROCESS_SERVICE);
     //caseService.triggerAdHocFragment($caseData.getCaseId(), "", prod);
     //java.util.Map parm = new java.util.HashMap(); parm.put("caseId" , $caseData.getCaseId());
     //parm.put("product" , prod);  
     //kcontext.getKnowledgeRuntime().startProcess(prod.getProcess(), parm);
     end

